{"version":3,"sources":["../../services/api/schema.graphql","components/configuration.tsx","components/common/logo.tsx","components/header.tsx","components/common/icons.tsx","components/validation/toolbar.tsx","graphql/schema.ts","components/validation/timeline.tsx","components/validation/next-event.tsx","components/validation/prev-event.tsx","components/validation/validate-event.tsx","components/validation/stats.tsx","components/validation.tsx","components/viewer.tsx","components/app.tsx","utils/prng.ts","graphql/mock-provider.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","styles","container","flex","justifyContent","alignItems","margin","Spacing","large","Logo","_ref","size","react_default","a","createElement","dist_es","style","logo","fontFamily","textTransform","transform","medium","fontSize","marginTop","xSmall","Header","pages","sources","selectedPage","selectedSource","onPageChange","onSourceChange","wonder_blocks_layout_dist_es","small","separator","wonder_blocks_dropdown_dist_es","light","placeholder","selectedValue","onChange","map","page","key","label","value","source","flexDirection","minHeight","padding","color","Color","white","backgroundColor","offBlack64","width","height","marginRight","borderRight","concat","white64","StartTimeIcon","viewBox","className","css","timeIcon","d","points","x1","x2","y1","y2","EndTimeIcon","NoImageIcon","StyleSheet","create","fill","stroke","strokeLinejoin","strokeWidth","TimeRangeModal","wonder_blocks_modal_dist_es","content","centerContainer","wonder_blocks_typography_dist_es","Toolbar","filteredBy","onFilterByChange","options","selectedOption","onOptionChange","startTime","endTime","start","moment","end","format","diff","modal","toolbar_TimeRangeModal","_ref2","openModal","wonder_blocks_button_dist_es","kind","timeButton","onClick","icons_StartTimeIcon","leftSeparator","optionsContainer","filterBySelect","wonder_blocks_form_dist_es","groupName","option","_ref3","rightSeparator","icons_EndTimeIcon","Validation","xxxSmall","offBlack50","borderTop","xxSmall",":active","marginLeft","borderLeft","xLarge","display","@media (max-width: 1023px)","flexWrap","border","offBlack16","borderRadius","blue","Timeline","events","selectedEvent","onSelectTime","_useState","useState","_useState2","Object","slicedToArray","hoverX","setHoverX","_useState3","_useState4","markers","setMarkers","useEffect","selectedIndex","event","index","x","created","valueOf","id","validation","Confirmed","green","Rejected","red","offBlack","opacity","selectedMarker","splice","toConsumableArray","onMouseMove","pageX","onMouseOut","length","eventPx","window","innerWidth","timeOffset","Math","round","clientX","position","preserveAspectRatio","marker","strokeOpacity","hoverCursor","left","offBlack8","borderBottom","offBlack32","cursor","pointerEvents","RightArrow","NextEvent","onNext","numValidate","setNumValidate","numTotal","setNumTotal","_useState5","_useState6","nextEvent","setNextEvent","_useState7","_useState8","validateNext","setValidateNext","validateCount","totalCount","next","validate","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","e","None","err","return","arrowsContainer","largeContainer","next_event_RightArrow","largeArrow","largeArrowDisabled","smallContainer","smallArrow","smallArrowDisabled","labelContainer","fontWeight","aligntItems",":hover","paddingTop","paddingRight","userSelect","PrevEvent","onPrev","prevEvent","setPrevEvent","validatePrev","setValidatePrev","prev","reverse","prev_event_RightArrow","right","paddingLeft","VALIDATE_EVENT_MUTATION","gql","_templateObject","ValidationMutation","Mutation","ValidateEvent","image","tags","rule","eventImage","src","uri","noImage","icons_NoImageIcon","header","tag","validate_event_ValidationMutation","mutation","validateEvent","footer","disabled","icon","icons","incorrect","aStyles","rejectButton","rejectButtonDisabled","rejectButtonLight","variables","input","eventId","xxxLarge","correct","confirmButton","confirmButtonDisabled","confirmButtonLight","offWhite","boxShadow","textAlign","maxHeight","maxWidth","objectFit","Stats","numTotalConfirmed","numTotalRejected","numFiltered","numFilteredConfirmed","numFilteredRejected","filterName","totalAccurate","filteredAccurate","totalColor1","totalColor2","filteredColor","filteredContainer","accuracyGauge","backgroundImage","filteredAccuracy","totalAccuracy","totalContainer","paddingBottom","textShadow","xxLarge","rules","setFilteredBy","selectedRule","setSelectedRule","selectedTag","setSelectedTag","setTimeOffset","_useState9","_useState10","setSelectedEvent","filteredEvents","filter","ValidationState","includes","handlePrevOrNext","forEach","filterBy","optionName","find","time","Fragment","workspace","withEvents","graphql","validation_templateObject","sourceId","props","data","ownProps","Set","min","max","__typename","add","startOf","endOf","objectSpread","Array","from","sort","validation_Validation","wonder_blocks_progress_spinner_dist_es","title","name","component","App","history","location","setSelectedPage","setSelectedSource","_params","matchPath","pathname","params","currentPage","currentSource","react_router","to","app","_ref6","pageTitle","selectPage","_ref4","push","_ref7","sourceName","selectSource","_ref5","_ref8","Component","path","render","assign","AppWithSources","app_templateObject","_ref9","withSources","Error","withErrorCatcher","WrappedComponent","_React$Component","_temp","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","error","inherits","createClass","setState","toString","opened","onClose","React","PRNG","seed","_seed","int","floor","float","array","i","j","between","resolveEvents","obj","r","images","shuffle","_","String","padStart","slice","offset","intervals","interval","pow","toISOString","resolvers","Query","Event","__resolveType","AppWithRouterAndMockProvider","client","setClient","fetch","schemaPath","then","resp","text","typeDefs","executableSchema","makeExecutableSchema","link","SchemaLink","schema","cache","InMemoryCache","ApolloClient","react_apollo_esm","withMockProvider","withRouter","ReactDOM","react_router_dom","basename","document","getElementById"],"mappings":"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","file":"static/js/main.c4c95a75.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/schema.0b7a4fcc.graphql\";","/**\n *  The root component of the webapp configuration page.\n */\nimport React from \"react\";\nimport {RouteComponentProps} from \"react-router\";\n\nimport {View} from \"@khanacademy/wonder-blocks-core\";\nimport Spacing from \"@khanacademy/wonder-blocks-spacing\";\nimport {LabelLarge} from \"@khanacademy/wonder-blocks-typography\";\n\nimport {Source} from \"../graphql/schema\";\n\ntype Props = {\n    // The source to configure rules for.\n    source: Source;\n};\n\nexport default function Viewer({source}: Props) {\n    return (\n        <View style={styles.container}>\n            <LabelLarge>Not Implemented</LabelLarge>\n        </View>\n    );\n}\n\nconst styles = {\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: Spacing.large,\n    },\n};\n","/**\n * The Pafactory logo.\n *\n * Rendered with `Uppen Arms NF` font.\n */\nimport React from \"react\";\n\nimport {Text} from \"@khanacademy/wonder-blocks-core\";\nimport Spacing from \"@khanacademy/wonder-blocks-spacing\";\n\nexport default function Logo({size}: {size: \"medium\"}) {\n    return <Text style={[styles.logo, styles[size]]}>pacefactory</Text>;\n}\n\nconst styles = {\n    logo: {\n        fontFamily: \"Uppen Arms NF\",\n        textTransform: \"lowercase\",\n        transform: \"skew(-35deg)\",\n    },\n\n    medium: {\n        fontSize: 28,\n        marginTop: -Spacing.xSmall,\n    },\n};\n","/**\n * A controlled component to render the webapp header bar.\n */\nimport React from \"react\";\n\nimport Color from \"@khanacademy/wonder-blocks-color\";\nimport {View} from \"@khanacademy/wonder-blocks-core\";\nimport {SingleSelect, OptionItem} from \"@khanacademy/wonder-blocks-dropdown\";\nimport {Strut} from \"@khanacademy/wonder-blocks-layout\";\nimport Spacing from \"@khanacademy/wonder-blocks-spacing\";\n\nimport Logo from \"./common/logo\";\n\ntype Props = {\n    // The available pages to select, eg. validation.\n    pages: string[];\n\n    // The currently selected page.\n    selectedPage: string;\n\n    // Callback for when the page selection changes.\n    onPageChange: (page: string) => void;\n\n    // The available sources to select, eg. cameras.\n    sources: string[];\n\n    // The currently selected source.\n    selectedSource: string;\n\n    // Callback for when the source selection changes.\n    onSourceChange: (source: string) => void;\n};\n\nexport default function Header({\n    pages,\n    sources,\n    selectedPage,\n    selectedSource,\n    onPageChange,\n    onSourceChange,\n}: Props) {\n    return (\n        <View style={styles.container}>\n            <Strut size={Spacing.small} />\n            <Logo size=\"medium\" />\n            <View style={styles.separator} />\n            <SingleSelect\n                light={true}\n                placeholder=\"Select page\"\n                selectedValue={selectedPage}\n                onChange={onPageChange}\n            >\n                {pages.map(page => (\n                    <OptionItem key={page} label={page} value={page} />\n                ))}\n            </SingleSelect>\n            <Strut size={Spacing.medium} />\n            <SingleSelect\n                placeholder=\"Select source\"\n                selectedValue={selectedSource}\n                onChange={onSourceChange}\n            >\n                {sources.map(source => (\n                    <OptionItem key={source} label={source} value={source} />\n                ))}\n            </SingleSelect>\n        </View>\n    );\n}\n\nconst styles = {\n    container: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        minHeight: 72,\n        padding: Spacing.medium,\n        color: Color.white,\n        backgroundColor: Color.offBlack64,\n    },\n\n    separator: {\n        width: Spacing.medium,\n        height: Spacing.large,\n        marginRight: Spacing.medium,\n        borderRight: `solid ${Color.white64} 1px`,\n    },\n};\n","/**\n *  Standalone icon components and icons for Wonder Blocks.\n */\nimport React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\n\nexport const clockIcon = {\n    medium:\n        \"M 12 0 C 5.398438 0 0 5.398438 0 12 C 0 18.601562 5.398438 24 12 24 C 18.601562 24 24 18.601562 24 12 C 24 5.398438 18.601562 0 12 0 Z M 12 21.601562 C 6.71875 21.601562 2.398438 17.28125 2.398438 12 C 2.398438 6.71875 6.71875 2.398438 12 2.398438 C 17.28125 2.398438 21.601562 6.71875 21.601562 12 C 21.601562 17.28125 17.28125 21.601562 12 21.601562 Z M 12.601562 6 L 10.800781 6 L 10.800781 13.199219 L 17.039062 17.039062 L 18 15.480469 L 12.601562 12.238281 Z\",\n};\n\nexport const StartTimeIcon = () => (\n    <svg width=\"22px\" height=\"22px\" viewBox=\"0 0 32 32\">\n        <g className={css(styles.timeIcon)}>\n            <path d=\"M16,31A15,15,0,1,1,31,16\" />\n            <polyline points=\"16 5 16 16 9 23\" />\n            <polyline points=\"26 19 31 24 26 29\" />\n            <line x1=\"31\" x2=\"19\" y1=\"24\" y2=\"24\" />\n        </g>\n    </svg>\n);\n\nexport const EndTimeIcon = () => (\n    <svg width=\"22px\" height=\"22px\" viewBox=\"0 0 32 32\">\n        <g className={css(styles.timeIcon)}>\n            <path d=\"M16,31A15,15,0,1,1,31,16\" />\n            <polyline points=\"16 5 16 16 9 23\" />\n            <polyline points=\"25 29 20 24 25 19\" />\n            <line x1=\"20\" x2=\"32\" y1=\"24\" y2=\"24\" />\n        </g>\n    </svg>\n);\n\nexport const NoImageIcon = () => (\n    <svg width=\"128px\" height=\"128px\" viewBox=\"0 0 32 32\">\n        <g>\n            <path d=\"M32,23.001c0-4.633-3.5-8.444-8-8.942V5.584L18.414,0H0v32h24v-0.059C28.5,31.443,32,27.633,32,23.001z M17.998,2.413 L21.586,6h-3.588V2.413z M2,30V1.998h14v6.001h6v6.06c-0.863,0.095-1.688,0.311-2.461,0.633C18.956,14.013,18,14,18,14l-2,0l-2-2 h-4l-2,2H6c0,0-2,0-2,2v6c0,2,2,2,2,2s4.531,0,8.058,0c0.267,2.42,1.493,4.548,3.29,6H2z M12,22c-1.658,0-3-1.342-3-3 c0-1.656,1.342-3,3-3c1.624,0,2.94,1.295,2.991,2.907c-0.333,0.651-0.589,1.347-0.756,2.077C13.685,21.603,12.892,22,12,22z M23,30 c-3.865-0.008-6.995-3.135-7-6.999c0.006-3.865,3.135-6.995,7-7.001c3.864,0.006,6.991,3.136,6.999,7.001 C29.991,26.865,26.864,29.992,23,30z\" />\n            <polygon points=\"19,25 21,27 23,25 25,27 27,25 25,23 27,21 25,19 23,21 21,19 19,21 21,23\" />\n        </g>\n    </svg>\n);\n\nconst styles = StyleSheet.create({\n    timeIcon: {\n        fill: \"none\",\n        stroke: \"#fff\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"2px\",\n    },\n});\n","/**\n * A controlled component to render a toolbar containing time-range and\n * rules selection to validate.\n */\nimport React from \"react\";\nimport moment from \"moment\";\nimport {StyleSheet, css} from \"aphrodite\";\n\nimport Button from \"@khanacademy/wonder-blocks-button\";\nimport Color from \"@khanacademy/wonder-blocks-color\";\nimport {View} from \"@khanacademy/wonder-blocks-core\";\nimport {Choice, RadioGroup} from \"@khanacademy/wonder-blocks-form\";\nimport {SingleSelect, OptionItem} from \"@khanacademy/wonder-blocks-dropdown\";\nimport {Spring} from \"@khanacademy/wonder-blocks-layout\";\nimport {OneColumnModal, ModalLauncher} from \"@khanacademy/wonder-blocks-modal\";\nimport Spacing from \"@khanacademy/wonder-blocks-spacing\";\nimport {HeadingXSmall, LabelLarge} from \"@khanacademy/wonder-blocks-typography\";\n\nimport {StartTimeIcon, EndTimeIcon} from \"../common/icons\";\n\nexport type FilterBy = \"rules\" | \"tags\";\n\nconst TimeRangeModal = () => (\n    <OneColumnModal\n        content={\n            <View>\n                <View style={styles.centerContainer}>\n                    <HeadingXSmall>Time Range</HeadingXSmall>\n                </View>\n                <View style={styles.centerContainer}>\n                    <LabelLarge>Not Implemented</LabelLarge>\n                </View>\n            </View>\n        }\n    />\n);\n\ntype Props = {\n    //\n    filteredBy: FilterBy;\n\n    //\n    onFilterByChange: (filterBy: FilterBy) => void;\n\n    /*\n    // The configured rules for the source to validate.\n    rules: string[];\n\n    // The currently selected rule to validate.\n    selectedRule: string;\n\n    // Callback for when the rule selection changes.\n    onRuleChange: (selectedRule: string) => void;\n\n    //\n    tags: string[];\n\n    //\n    selectedTag: string;\n\n    //\n    onTagChange: (selectedTag: string) => void;\n    */\n\n    //\n    options: string[];\n\n    //\n    selectedOption: string;\n\n    //\n    onOptionChange: (optionName: string) => void;\n\n    //\n    startTime: number;\n    endTime: number;\n};\n\nexport default function Toolbar({\n    filteredBy,\n    onFilterByChange,\n    options,\n    selectedOption,\n    onOptionChange,\n    startTime,\n    endTime,\n}: Props) {\n    const start = moment(startTime);\n    const end = moment(endTime);\n\n    let format = \"ddd, HH:mm\";\n    // Variable display format for start & end time depending on the events\n    // time range.\n    if (end.diff(start, \"years\")) {\n        format = \"MMMM Do YYYY\";\n    } else if (end.diff(start, \"days\")) {\n        format = \"MMM D, HH:mm\";\n    }\n\n    return (\n        <View style={styles.container}>\n            <ModalLauncher modal={<TimeRangeModal />}>\n                {({openModal}: {openModal: () => void}) => (\n                    <Button\n                        light={true}\n                        size=\"medium\"\n                        kind=\"secondary\"\n                        style={styles.timeButton}\n                        onClick={openModal}\n                    >\n                        <StartTimeIcon />\n                        <View style={styles.leftSeparator} />\n                        {start.format(format)}\n                    </Button>\n                )}\n            </ModalLauncher>\n\n            <Spring />\n\n            <div className={css(styles.optionsContainer)}>\n                <SingleSelect\n                    light={true}\n                    style={styles.filterBySelect}\n                    placeholder=\"Filter by\"\n                    selectedValue={filteredBy}\n                    onChange={onFilterByChange}\n                >\n                    <OptionItem label=\"Validate by rule\" value=\"rules\" />\n                    <OptionItem label=\"Validate by tag\" value=\"tags\" />\n                </SingleSelect>\n\n                <RadioGroup\n                    groupName=\"options\"\n                    selectedValue={selectedOption}\n                    style={styles.options}\n                    onChange={onOptionChange}\n                >\n                    {options.map(option => (\n                        <Choice\n                            key={option}\n                            label={option}\n                            value={option}\n                            style={[\n                                styles.option,\n                                selectedOption === option &&\n                                    styles.selectedOption,\n                            ]}\n                        />\n                    ))}\n                </RadioGroup>\n            </div>\n\n            <Spring />\n\n            <ModalLauncher modal={<TimeRangeModal />}>\n                {({openModal}: {openModal: () => void}) => (\n                    <Button\n                        light={true}\n                        size=\"medium\"\n                        kind=\"secondary\"\n                        style={styles.timeButton}\n                        onClick={openModal}\n                    >\n                        {end.format(format)}\n                        <View style={styles.rightSeparator} />\n                        <EndTimeIcon />\n                    </Button>\n                )}\n            </ModalLauncher>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        padding: `${Spacing.xxxSmall}px ${Spacing.medium}px`,\n        color: Color.white,\n        backgroundColor: Color.offBlack50,\n        borderTop: `solid ${Color.offBlack50} 1px`,\n    },\n\n    timeButton: {\n        margin: `-${Spacing.xxSmall}px 0`,\n\n        \":active\": {\n            color: Color.white,\n        },\n    },\n\n    leftSeparator: {\n        width: Spacing.small,\n        height: Spacing.medium,\n        marginLeft: Spacing.small,\n        borderLeft: `solid ${Color.white64} 2px`,\n    },\n\n    rightSeparator: {\n        width: Spacing.small,\n        height: Spacing.medium,\n        marginRight: Spacing.small,\n        borderRight: `solid ${Color.white64} 2px`,\n    },\n\n    filterBySelect: {\n        height: Spacing.xLarge,\n        margin: Spacing.medium,\n    },\n\n    optionsContainer: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: `0px ${Spacing.small}px`,\n\n        \"@media (max-width: 1023px)\": {\n            flexDirection: \"column\",\n        },\n    },\n\n    options: {\n        flexDirection: \"row\",\n        flexWrap: \"wrap\",\n    },\n\n    option: {\n        padding: `${Spacing.xSmall}px ${Spacing.small}px ${Spacing.xxSmall}px ${\n            Spacing.xSmall\n        }px`,\n        margin: `${Spacing.xxxSmall}px ${Spacing.xxSmall}px`,\n        border: `solid ${Color.offBlack16} 1px`,\n        borderRadius: Spacing.xxSmall,\n    },\n\n    selectedOption: {\n        backgroundColor: Color.blue,\n    },\n\n    centerContainer: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: Spacing.medium,\n    },\n});\n","export type Maybe<T> = T | null;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  Time: any;\n};\n\nexport type AlarmEvent = Event & {\n  id: Scalars[\"ID\"];\n  created: Scalars[\"Time\"];\n  validation: Validation;\n  rule: Scalars[\"String\"];\n  image: Image;\n};\n\nexport type Event = {\n  id: Scalars[\"ID\"];\n  created: Scalars[\"Time\"];\n  validation: Validation;\n};\n\nexport type Image = {\n  id: Scalars[\"ID\"];\n  uri: Scalars[\"String\"];\n  tags: Array<Scalars[\"String\"]>;\n};\n\nexport type Mutation = {\n  validateEvent: Event;\n};\n\nexport type MutationValidateEventArgs = {\n  input: ValidateEventInput;\n};\n\nexport type Query = {\n  sources: Array<Source>;\n  events: Array<Event>;\n};\n\nexport type QueryEventsArgs = {\n  sourceId: Scalars[\"ID\"];\n};\n\nexport type Source = {\n  id: Scalars[\"ID\"];\n  name: Scalars[\"String\"];\n  uri: Scalars[\"String\"];\n};\n\nexport type ValidateEventInput = {\n  eventId: Scalars[\"ID\"];\n  validation: Validation;\n};\n\nexport enum Validation {\n  None = \"NONE\",\n  Rejected = \"REJECTED\",\n  Confirmed = \"CONFIRMED\"\n}\nexport type GetSourcesQueryVariables = {};\n\nexport type GetSourcesQuery = { __typename?: \"Query\" } & {\n  sources: Array<\n    { __typename?: \"Source\" } & Pick<Source, \"id\" | \"name\" | \"uri\">\n  >;\n};\n\nexport type GetEventsQueryVariables = {\n  sourceId: Scalars[\"ID\"];\n};\n\nexport type GetEventsQuery = { __typename?: \"Query\" } & {\n  events: Array<\n    Pick<Event, \"id\" | \"created\" | \"validation\"> &\n      ({ __typename?: \"AlarmEvent\" } & Pick<AlarmEvent, \"rule\"> & {\n          image: { __typename?: \"Image\" } & Pick<Image, \"id\" | \"uri\" | \"tags\">;\n        })\n  >;\n};\n\nexport type ValidateEventMutationVariables = {\n  input: ValidateEventInput;\n};\n\nexport type ValidateEventMutation = { __typename?: \"Mutation\" } & {\n  validateEvent: Pick<Event, \"id\" | \"created\" | \"validation\"> &\n    ({ __typename?: \"AlarmEvent\" } & Pick<AlarmEvent, \"rule\"> & {\n        image: { __typename?: \"Image\" } & Pick<Image, \"id\" | \"uri\" | \"tags\">;\n      });\n};\n","/**\n * A controlled component to render validation events for a selected time-range.\n *\n * Enables user to jump to a point in time by clicking within the timeline.\n */\nimport React, {useEffect, useState} from \"react\";\nimport moment from \"moment\";\n\nimport Color from \"@khanacademy/wonder-blocks-color\";\nimport {View} from \"@khanacademy/wonder-blocks-core\";\n\nimport {SourceEvent} from \"../common/types\";\nimport {Validation} from \"../../graphql/schema\";\n\ntype Props = {\n    //\n    events: SourceEvent[];\n\n    //\n    selectedEvent: SourceEvent | null;\n\n    //\n    startTime: number;\n    endTime: number;\n\n    //\n    onSelectTime: (time: number) => void;\n};\n\ntype Marker = {\n    id: string;\n\n    //\n    x: string;\n\n    //\n    color: string;\n    opacity: string;\n};\n\nexport default function Timeline({\n    events,\n    selectedEvent,\n    startTime,\n    endTime,\n    onSelectTime,\n}: Props) {\n    // The horizontal cursor position within the timeline where the user is\n    // hovering.\n    const [hoverX, setHoverX] = useState<number | null>(null);\n\n    const [markers, setMarkers] = useState<Marker[]>([]);\n\n    useEffect(() => {\n        let selectedIndex = -1;\n\n        let markers = events.map((event, index) => {\n            const x =\n                ((moment(event.created).valueOf() - startTime) /\n                    (endTime - startTime)) *\n                    100 +\n                \"%\";\n\n            if (selectedEvent && selectedEvent.id === event.id) {\n                selectedIndex = index;\n            }\n\n            let color;\n\n            switch (event.validation) {\n                case Validation.Confirmed:\n                    color = Color.green;\n                    break;\n\n                case Validation.Rejected:\n                    color = Color.red;\n                    break;\n\n                default:\n                    color =\n                        selectedIndex === index ? Color.blue : Color.offBlack;\n                    break;\n            }\n\n            return {\n                id: event.id,\n                x,\n                color,\n                opacity: selectedIndex === index ? \"0.5\" : \"0.1\",\n            };\n        });\n\n        if (selectedIndex !== -1) {\n            const selectedMarker = markers[selectedIndex];\n\n            markers.splice(selectedIndex, 1);\n\n            markers = [selectedMarker, ...markers];\n        }\n\n        setMarkers(markers);\n    }, [events, selectedEvent]);\n\n    function handleClick(event: MouseEvent) {\n        if (!events.length) {\n            return;\n        }\n\n        const eventPx = window.innerWidth / events.length / 2;\n\n        const timeOffset = Math.round(\n            (endTime - startTime) *\n                ((event.clientX + eventPx) / window.innerWidth) +\n                startTime,\n        );\n\n        onSelectTime(timeOffset);\n    }\n\n    return (\n        <View\n            style={styles.container}\n            onMouseMove={(event: MouseEvent) => setHoverX(event.pageX)}\n            onMouseOut={() => setHoverX(null)}\n            onClick={handleClick}\n        >\n            <svg\n                style={{position: \"absolute\"}}\n                width=\"100%\"\n                height=\"100%\"\n                viewBox={`0 0 ${markers.length} 40`}\n                preserveAspectRatio=\"none\"\n            >\n                {markers.map(marker => (\n                    <line\n                        key={marker.id}\n                        stroke={marker.color}\n                        strokeOpacity={marker.opacity}\n                        strokeWidth=\"1px\"\n                        x1={marker.x}\n                        x2={marker.x}\n                        y1=\"0\"\n                        y2=\"100%\"\n                    />\n                ))}\n            </svg>\n            {hoverX !== null && (\n                <View style={[styles.hoverCursor, {left: hoverX}]} />\n            )}\n        </View>\n    );\n}\n\nconst styles = {\n    container: {\n        minHeight: 40,\n        backgroundColor: Color.offBlack8,\n        borderTop: `solid ${Color.white64} 1px`,\n        borderBottom: `solid ${Color.offBlack32} 1px`,\n        cursor: \"crosshair\",\n    },\n\n    hoverCursor: {\n        position: \"absolute\",\n        width: 1,\n        height: \"100%\",\n        borderRight: `solid ${Color.offBlack32} 1px`,\n        pointerEvents: \"none\",\n    },\n};\n","/**\n *\n */\nimport React, {useEffect, useState} from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport moment from \"moment\";\n\nimport Button from \"@khanacademy/wonder-blocks-button\";\nimport Color from \"@khanacademy/wonder-blocks-color\";\nimport {View, Text} from \"@khanacademy/wonder-blocks-core\";\nimport Icon, {icons} from \"@khanacademy/wonder-blocks-icon\";\nimport {Spring, Strut} from \"@khanacademy/wonder-blocks-layout\";\nimport Spacing from \"@khanacademy/wonder-blocks-spacing\";\nimport {HeadingXSmall} from \"@khanacademy/wonder-blocks-typography\";\n\nimport {SourceEvent} from \"../common/types\";\n\nimport {Validation} from \"../../graphql/schema\";\n\nconst RightArrow = ({className}: {className: string}) => (\n    <svg className={className} viewBox=\"0 0 50 50\">\n        <polygon points=\"15,2.75 12.914,4.836 33.078,25 12.914,45.164 15,47.25 37.25,25\" />\n    </svg>\n);\n\ntype Props = {\n    //\n    events: SourceEvent[];\n\n    //\n    selectedEvent: SourceEvent;\n\n    //\n    onNext: (event: SourceEvent) => void;\n};\n\nexport default function NextEvent({events, selectedEvent, onNext}: Props) {\n    const [numValidate, setNumValidate] = useState(0);\n    const [numTotal, setNumTotal] = useState(0);\n\n    const [nextEvent, setNextEvent] = useState<SourceEvent | null>(null);\n    const [validateNext, setValidateNext] = useState<SourceEvent | null>(null);\n\n    useEffect(() => {\n        let validateCount = 0;\n        let totalCount = 0;\n\n        let next = null;\n        let validate = null;\n\n        for (const e of events) {\n            if (\n                moment(e.created).valueOf() <=\n                moment(selectedEvent.created).valueOf()\n            ) {\n                continue;\n            }\n\n            totalCount++;\n\n            if (!next) {\n                next = e;\n            }\n\n            if (e.validation === Validation.None) {\n                validateCount++;\n\n                if (!validate) {\n                    validate = e;\n                }\n            }\n        }\n\n        setNumTotal(totalCount);\n        setNumValidate(validateCount);\n        setNextEvent(next);\n        setValidateNext(validate);\n    }, [events, selectedEvent]);\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.arrowsContainer}>\n                <View\n                    style={styles.largeContainer}\n                    onClick={() => validateNext && onNext(validateNext)}\n                >\n                    <RightArrow\n                        className={css(\n                            validateNext\n                                ? styles.largeArrow\n                                : styles.largeArrowDisabled,\n                        )}\n                    />\n                </View>\n                <View\n                    style={styles.smallContainer}\n                    onClick={() => nextEvent && onNext(nextEvent)}\n                >\n                    <RightArrow\n                        className={css(\n                            nextEvent\n                                ? styles.smallArrow\n                                : styles.smallArrowDisabled,\n                        )}\n                    />\n                </View>\n            </View>\n\n            <View style={styles.labelContainer}>\n                <HeadingXSmall>\n                    Validate{\" \"}\n                    <Text\n                        style={{fontWeight: 900}}\n                    >{`${numValidate}/${numTotal}`}</Text>\n                </HeadingXSmall>\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        aligntItems: \"center\",\n    },\n\n    arrowsContainer: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n    },\n\n    largeContainer: {},\n\n    smallContainer: {\n        position: \"absolute\",\n        left: 0,\n    },\n\n    largeArrow: {\n        width: \"150px\",\n        height: \"150px\",\n        cursor: \"pointer\",\n        fill: Color.offBlack50,\n\n        \":hover\": {\n            fill: Color.offBlack64,\n        },\n    },\n\n    largeArrowDisabled: {\n        width: \"150px\",\n        height: \"150px\",\n        fill: Color.offBlack16,\n    },\n\n    smallArrow: {\n        width: \"75px\",\n        height: \"75px\",\n        cursor: \"pointer\",\n        fill: Color.offBlack50,\n\n        \":hover\": {\n            fill: Color.offBlack64,\n        },\n    },\n\n    smallArrowDisabled: {\n        width: \"75px\",\n        height: \"75px\",\n        fill: Color.offBlack16,\n    },\n\n    labelContainer: {\n        alignItems: \"center\",\n        paddingTop: Spacing.small,\n        paddingRight: 25,\n        pointerEvents: \"none\",\n        userSelect: \"none\",\n    },\n});\n","/**\n *\n */\nimport React, {useEffect, useState} from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport moment from \"moment\";\n\nimport Button from \"@khanacademy/wonder-blocks-button\";\nimport Color from \"@khanacademy/wonder-blocks-color\";\nimport {View, Text} from \"@khanacademy/wonder-blocks-core\";\nimport Icon, {icons} from \"@khanacademy/wonder-blocks-icon\";\nimport {Spring, Strut} from \"@khanacademy/wonder-blocks-layout\";\nimport Spacing from \"@khanacademy/wonder-blocks-spacing\";\nimport {HeadingXSmall} from \"@khanacademy/wonder-blocks-typography\";\n\nimport {SourceEvent} from \"../common/types\";\n\nimport {Validation} from \"../../graphql/schema\";\n\nconst RightArrow = ({className}: {className: string}) => (\n    <svg className={className} viewBox=\"0 0 50 50\">\n        <polygon points=\"35,2.75 37.086,4.836 16.922,25 37.086,45.164 35,47.25 12.75,25\" />\n    </svg>\n);\n\ntype Props = {\n    //\n    events: SourceEvent[];\n\n    //\n    selectedEvent: SourceEvent;\n\n    //\n    onPrev: (event: SourceEvent) => void;\n};\n\nexport default function PrevEvent({events, selectedEvent, onPrev}: Props) {\n    const [numValidate, setNumValidate] = useState(0);\n    const [numTotal, setNumTotal] = useState(0);\n\n    const [prevEvent, setPrevEvent] = useState<SourceEvent | null>(null);\n    const [validatePrev, setValidatePrev] = useState<SourceEvent | null>(null);\n\n    useEffect(() => {\n        let validateCount = 0;\n        let totalCount = 0;\n\n        let prev = null;\n        let validate = null;\n\n        for (const e of [...events].reverse()) {\n            if (\n                moment(e.created).valueOf() >=\n                moment(selectedEvent.created).valueOf()\n            ) {\n                continue;\n            }\n\n            totalCount++;\n\n            if (!prev) {\n                prev = e;\n            }\n\n            if (e.validation === Validation.None) {\n                validateCount++;\n\n                if (!validate) {\n                    validate = e;\n                }\n            }\n        }\n\n        setNumTotal(totalCount);\n        setNumValidate(validateCount);\n        setPrevEvent(prev);\n        setValidatePrev(validate);\n    }, [events, selectedEvent]);\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.arrowsContainer}>\n                <View\n                    style={styles.largeContainer}\n                    onClick={() => validatePrev && onPrev(validatePrev)}\n                >\n                    <RightArrow\n                        className={css(\n                            validatePrev\n                                ? styles.largeArrow\n                                : styles.largeArrowDisabled,\n                        )}\n                    />\n                </View>\n                <View\n                    style={styles.smallContainer}\n                    onClick={() => prevEvent && onPrev(prevEvent)}\n                >\n                    <RightArrow\n                        className={css(\n                            prevEvent\n                                ? styles.smallArrow\n                                : styles.smallArrowDisabled,\n                        )}\n                    />\n                </View>\n            </View>\n\n            <View style={styles.labelContainer}>\n                <HeadingXSmall>\n                    Validate{\" \"}\n                    <Text\n                        style={{fontWeight: 900}}\n                    >{`${numValidate}/${numTotal}`}</Text>\n                </HeadingXSmall>\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        aligntItems: \"center\",\n    },\n\n    arrowsContainer: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n    },\n\n    largeContainer: {},\n\n    smallContainer: {\n        position: \"absolute\",\n        right: 0,\n    },\n\n    largeArrow: {\n        width: \"150px\",\n        height: \"150px\",\n        cursor: \"pointer\",\n        fill: Color.offBlack50,\n\n        \":hover\": {\n            fill: Color.offBlack64,\n        },\n    },\n\n    largeArrowDisabled: {\n        width: \"150px\",\n        height: \"150px\",\n        fill: Color.offBlack16,\n    },\n\n    smallArrow: {\n        width: \"75px\",\n        height: \"75px\",\n        cursor: \"pointer\",\n        fill: Color.offBlack50,\n\n        \":hover\": {\n            fill: Color.offBlack64,\n        },\n    },\n\n    smallArrowDisabled: {\n        width: \"75px\",\n        height: \"75px\",\n        fill: Color.offBlack16,\n    },\n\n    labelContainer: {\n        alignItems: \"center\",\n        paddingTop: Spacing.small,\n        paddingLeft: 25,\n        pointerEvents: \"none\",\n        userSelect: \"none\",\n    },\n});\n","/**\n *\n */\nimport React from \"react\";\nimport {StyleSheet, css} from \"aphrodite\";\nimport moment from \"moment\";\nimport gql from \"graphql-tag\";\n\nimport Button from \"@khanacademy/wonder-blocks-button\";\nimport Color from \"@khanacademy/wonder-blocks-color\";\nimport {View} from \"@khanacademy/wonder-blocks-core\";\nimport Icon, {icons} from \"@khanacademy/wonder-blocks-icon\";\nimport {Spring, Strut} from \"@khanacademy/wonder-blocks-layout\";\nimport Spacing from \"@khanacademy/wonder-blocks-spacing\";\nimport {\n    HeadingLarge,\n    HeadingXSmall,\n    Footnote,\n    LabelMedium,\n} from \"@khanacademy/wonder-blocks-typography\";\n\nimport {NoImageIcon} from \"../common/icons\";\n\nimport {\n    Source,\n    Event,\n    AlarmEvent,\n    ValidateEventMutation,\n    ValidateEventMutationVariables,\n    Validation,\n} from \"../../graphql/schema\";\nimport {Mutation} from \"react-apollo\";\n\nconst VALIDATE_EVENT_MUTATION = gql`\n    mutation ValidateEvent($input: ValidateEventInput!) {\n        validateEvent(input: $input) {\n            id\n            created\n            validation\n            ... on AlarmEvent {\n                rule\n                image {\n                    id\n                    uri\n                    tags\n                }\n            }\n        }\n    }\n`;\n\nclass ValidationMutation extends Mutation<\n    ValidateEventMutation,\n    ValidateEventMutationVariables\n> {}\n\ntype Props = {\n    //\n    source: Source;\n\n    //\n    event: Event | AlarmEvent;\n};\n\nexport default function ValidateEvent({source, event}: Props) {\n    let image;\n    let tags: string[] = [];\n    let rule: string = \"\";\n\n    if (\"image\" in event) {\n        image = (\n            <View style={styles.eventImage}>\n                <img style={styles.eventImage} src={event.image.uri} />\n            </View>\n        );\n\n        if (event.image.tags.length) {\n            tags = event.image.tags;\n        }\n\n        rule = event.rule;\n    } else {\n        image = (\n            <View style={styles.noImage}>\n                <NoImageIcon />\n            </View>\n        );\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.header}>\n                <HeadingXSmall>\n                    {moment(event.created).format(\"MMM D YYYY, h:mm a\")}\n                </HeadingXSmall>\n            </View>\n            <View style={styles.tags}>\n                {tags.map(tag => (\n                    <Footnote key={tag} style={styles.tag}>\n                        {tag}\n                    </Footnote>\n                ))}\n                <LabelMedium style={styles.tag}>+</LabelMedium>\n            </View>\n            <View style={styles.image}>{image}</View>\n\n            <ValidationMutation mutation={VALIDATE_EVENT_MUTATION}>\n                {validateEvent =>\n                    rule && (\n                        <View style={styles.footer}>\n                            <Button\n                                disabled={\n                                    event.validation === Validation.Rejected\n                                }\n                                icon={\n                                    event.validation === Validation.Rejected &&\n                                    icons.incorrect\n                                }\n                                style={[\n                                    aStyles.rejectButton,\n                                    event.validation === Validation.Rejected &&\n                                        aStyles.rejectButtonDisabled,\n                                    event.validation === Validation.Confirmed &&\n                                        aStyles.rejectButtonLight,\n                                ]}\n                                onClick={() => {\n                                    validateEvent({\n                                        variables: {\n                                            input: {\n                                                eventId: event.id,\n                                                validation: Validation.Rejected,\n                                            },\n                                        },\n                                    });\n                                }}\n                            >\n                                {event.validation === Validation.Rejected\n                                    ? \"Rejected\"\n                                    : \"Reject\"}\n                            </Button>\n                            <Strut size={Spacing.xxxLarge} />\n                            <HeadingLarge>{rule}</HeadingLarge>\n                            <Strut size={Spacing.xxxLarge} />\n                            <Button\n                                disabled={\n                                    event.validation === Validation.Confirmed\n                                }\n                                icon={\n                                    event.validation === Validation.Confirmed &&\n                                    icons.correct\n                                }\n                                style={[\n                                    aStyles.confirmButton,\n                                    event.validation === Validation.Confirmed &&\n                                        aStyles.confirmButtonDisabled,\n                                    event.validation === Validation.Rejected &&\n                                        aStyles.confirmButtonLight,\n                                ]}\n                                onClick={() => {\n                                    validateEvent({\n                                        variables: {\n                                            input: {\n                                                eventId: event.id,\n                                                validation:\n                                                    Validation.Confirmed,\n                                            },\n                                        },\n                                    });\n                                }}\n                            >\n                                {event.validation === Validation.Confirmed\n                                    ? \"Confirmed\"\n                                    : \"Confirm\"}\n                            </Button>\n                        </View>\n                    )\n                }\n            </ValidationMutation>\n        </View>\n    );\n}\n\nconst styles = {\n    container: {\n        //flex: 1,\n        //flexDirection: \"column\",\n        //backgroundColor: Color.white,\n        backgroundColor: Color.offWhite,\n        borderRadius: Spacing.xxxSmall,\n        border: \"1px solid rgba(33, 36, 44, 0.16)\",\n        boxShadow: \"0px 4px 8px rgba(33, 36, 44, 0.16)\",\n    },\n\n    header: {\n        padding: `${Spacing.small}px ${Spacing.xSmall}px ${Spacing.xSmall}px ${\n            Spacing.xSmall\n        }px`,\n        textAlign: \"center\",\n    },\n\n    image: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: Spacing.small,\n    },\n\n    eventImage: {\n        maxHeight: \"100%\",\n        maxWidth: \"100%\",\n        // HACK: Fix `Type 'string' is not assignable to type '\"contain\" | ...`.\n        objectFit: \"contain\" as \"contain\",\n    },\n\n    noImage: {\n        fill: Color.offBlack8,\n    },\n\n    tags: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        padding: `${Spacing.xxxSmall}px ${Spacing.xxSmall}px`,\n        backgroundColor: Color.offBlack8,\n    },\n\n    tag: {\n        margin: Spacing.xxxSmall,\n        padding: `${Spacing.xxxSmall}px ${Spacing.small}px`,\n        borderRadius: Spacing.medium,\n        backgroundColor: Color.offBlack32,\n        color: Color.white,\n    },\n\n    footer: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        padding: Spacing.small,\n        borderTop: `${Spacing.small}px solid ${Color.offBlack8}`,\n    },\n};\n\nconst aStyles = StyleSheet.create({\n    rejectButton: {\n        width: \"100%\",\n        backgroundColor: Color.red,\n\n        \":hover\": {\n            boxShadow: `0 0 0 1px ${Color.white}, 0 0 0 3px ${Color.red}`,\n        },\n    },\n\n    rejectButtonDisabled: {\n        backgroundColor: \"transparent\",\n        color: Color.red,\n\n        \":hover\": {\n            boxShadow: \"none\",\n        },\n    },\n\n    rejectButtonLight: {\n        backgroundColor: \"transparent\",\n        border: `1px solid ${Color.red}`,\n        color: Color.red,\n\n        \":hover\": {\n            backgroundColor: Color.red,\n            color: Color.white,\n        },\n    },\n\n    confirmButton: {\n        width: \"100%\",\n        backgroundColor: Color.green,\n\n        \":hover\": {\n            boxShadow: `0 0 0 1px ${Color.white}, 0 0 0 3px ${Color.green}`,\n        },\n    },\n\n    confirmButtonDisabled: {\n        backgroundColor: \"transparent\",\n        color: Color.green,\n\n        \":hover\": {\n            boxShadow: \"none\",\n        },\n    },\n\n    confirmButtonLight: {\n        backgroundColor: \"transparent\",\n        border: `1px solid ${Color.green}`,\n        color: Color.green,\n\n        \":hover\": {\n            backgroundColor: Color.green,\n            color: Color.white,\n        },\n    },\n});\n","/**\n *\n */\nimport React from \"react\";\n\nimport Button from \"@khanacademy/wonder-blocks-button\";\nimport Color from \"@khanacademy/wonder-blocks-color\";\nimport {View, Text} from \"@khanacademy/wonder-blocks-core\";\nimport Icon, {icons} from \"@khanacademy/wonder-blocks-icon\";\nimport {Spring, Strut} from \"@khanacademy/wonder-blocks-layout\";\nimport Spacing from \"@khanacademy/wonder-blocks-spacing\";\nimport {\n    HeadingLarge,\n    HeadingMedium,\n    HeadingXSmall,\n} from \"@khanacademy/wonder-blocks-typography\";\n\ntype Props = {\n    //\n    numTotal: number;\n    numTotalConfirmed: number;\n    numTotalRejected: number;\n\n    //\n    numFiltered: number;\n    numFilteredConfirmed: number;\n    numFilteredRejected: number;\n\n    //\n    filterName: string;\n};\n\nexport default function Stats({\n    numTotal,\n    numTotalConfirmed,\n    numTotalRejected,\n    numFiltered,\n    numFilteredConfirmed,\n    numFilteredRejected,\n    filterName,\n}: Props) {\n    const totalAccurate = numTotal > 0 ? numTotalConfirmed / numTotal : 0;\n    const filteredAccurate =\n        numFiltered > 0 ? numFilteredConfirmed / numFiltered : 0;\n\n    const totalColor1 = `hsl(${120 * totalAccurate}, 50%, 40%)`;\n    const totalColor2 = `hsl(${120 * totalAccurate}, 80%, 40%)`;\n    const filteredColor = `hsl(${120 * filteredAccurate}, 100%, 40%)`;\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.filteredContainer}>\n                <HeadingXSmall>\n                    {`Validated ${filterName} `}\n                    <Text style={{fontWeight: 900}}>{`${numFilteredConfirmed +\n                        numFilteredRejected}/${numFiltered}`}</Text>\n                </HeadingXSmall>\n            </View>\n            <Strut size={Spacing.large} />\n            <View\n                style={[\n                    styles.accuracyGauge,\n                    {\n                        backgroundColor: totalColor1,\n                        backgroundImage: `linear-gradient(to right, ${totalColor1}, ${totalColor2})`,\n                    },\n                ]}\n            >\n                <HeadingLarge\n                    style={[\n                        styles.filteredAccuracy,\n                        {\n                            backgroundColor: filteredColor,\n                        },\n                    ]}\n                >\n                    {numFiltered > 0\n                        ? Math.round((numFilteredConfirmed / numFiltered) * 100)\n                        : \"\"}\n                    %\n                </HeadingLarge>\n                <HeadingMedium style={styles.totalAccuracy}>\n                    {numTotal > 0\n                        ? Math.round((numTotalConfirmed / numTotal) * 100)\n                        : \"\"}\n                    %\n                </HeadingMedium>\n            </View>\n            <Strut size={Spacing.large} />\n            <View style={styles.totalContainer}>\n                <HeadingXSmall>\n                    {\"Validated total \"}\n                    <Text style={{fontWeight: 900}}>{`${numTotalConfirmed +\n                        numTotalRejected}/${numTotal}`}</Text>\n                </HeadingXSmall>\n            </View>\n        </View>\n    );\n}\n\nconst styles = {\n    container: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingTop: Spacing.small,\n        paddingBottom: Spacing.medium,\n    },\n\n    filteredContainer: {\n        flex: 1,\n        alignItems: \"flex-end\",\n    },\n\n    totalContainer: {\n        flex: 1,\n        alignItems: \"flex-start\",\n    },\n\n    accuracyGauge: {\n        flexDirection: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        paddingLeft: 3,\n        borderRadius: \"100%\",\n        boxShadow: \"inset 0 4px 8px rgba(33, 36, 44, 0.16)\",\n    },\n\n    filteredAccuracy: {\n        color: Color.white,\n        padding: Spacing.xLarge,\n        borderRadius: \"100%\",\n        boxShadow: \"4px 0px 8px rgba(33, 36, 44, 0.16)\",\n        textShadow: `0 -1px 2px ${Color.offBlack16}`,\n    },\n\n    totalAccuracy: {\n        padding: `${Spacing.xxLarge}px ${Spacing.large}px ${\n            Spacing.xxLarge\n        }px ${Spacing.medium}px`,\n        color: Color.white,\n        textShadow: `0 -1px 2px ${Color.offBlack16}`,\n    },\n};\n","/**\n *  The root component of the webapp validation page.\n */\nimport React, {useEffect, useState} from \"react\";\nimport moment from \"moment\";\nimport {RouteComponentProps} from \"react-router\";\nimport {graphql, Query} from \"react-apollo\";\nimport gql from \"graphql-tag\";\n\nimport {View} from \"@khanacademy/wonder-blocks-core\";\nimport {CircularSpinner} from \"@khanacademy/wonder-blocks-progress-spinner\";\nimport {Spring} from \"@khanacademy/wonder-blocks-layout\";\nimport Spacing from \"@khanacademy/wonder-blocks-spacing\";\n\nimport {SourceEvent} from \"./common/types\";\nimport Toolbar, {FilterBy} from \"./validation/toolbar\";\nimport Timeline from \"./validation/timeline\";\nimport NextEvent from \"./validation/next-event\";\nimport PrevEvent from \"./validation/prev-event\";\nimport ValidateEvent from \"./validation/validate-event\";\n\nimport {\n    Source,\n    GetEventsQuery,\n    GetEventsQueryVariables,\n    AlarmEvent,\n    Event,\n    Validation as ValidationState,\n} from \"../graphql/schema\";\nimport Stats from \"./validation/stats\";\n\ntype Data = {\n    //\n    events: SourceEvent[];\n\n    //\n    startTime: number;\n    endTime: number;\n\n    //\n    rules: string[];\n    tags: string[];\n};\n\ntype Props = RouteComponentProps & {\n    // The source to validate events for.\n    source: Source;\n};\n\nfunction Validation({\n    source,\n    events,\n    startTime,\n    endTime,\n    rules,\n    tags,\n}: Props & Data) {\n    //\n    const [filteredBy, setFilteredBy] = useState<FilterBy>(\"rules\");\n\n    // The current selected rule to validate for the source.\n    const [selectedRule, setSelectedRule] = useState(\n        rules.length ? rules[0] : undefined,\n    );\n\n    const [selectedTag, setSelectedTag] = useState(\n        tags.length ? tags[0] : undefined,\n    );\n\n    //\n    const [timeOffset, setTimeOffset] = useState(startTime);\n\n    //\n    const [selectedEvent, setSelectedEvent] = useState<SourceEvent | null>(\n        null,\n    );\n\n    let numTotalConfirmed = 0;\n    let numTotalRejected = 0;\n\n    const filteredEvents = events.filter(event => {\n        switch (event.validation) {\n            case ValidationState.Confirmed:\n                numTotalConfirmed++;\n                break;\n\n            case ValidationState.Rejected:\n                numTotalRejected++;\n                break;\n        }\n\n        switch (filteredBy) {\n            case \"rules\":\n                if (!selectedRule) {\n                    return true;\n                } else if (!(\"rule\" in event)) {\n                    return selectedRule === \"<unknown>\";\n                }\n\n                return event.rule === selectedRule;\n\n            case \"tags\":\n                if (!selectedTag) {\n                    return true;\n                } else if (!(\"image\" in event)) {\n                    return false;\n                }\n\n                return event.image.tags.includes(selectedTag);\n        }\n    });\n\n    let numFilteredConfirmed = 0;\n    let numFilteredRejected = 0;\n\n    filteredEvents.forEach(event => {\n        switch (event.validation) {\n            case ValidationState.Confirmed:\n                numFilteredConfirmed++;\n                break;\n\n            case ValidationState.Rejected:\n                numFilteredRejected++;\n                break;\n        }\n    });\n\n    useEffect(() => {\n        let event = null;\n\n        for (const e of filteredEvents) {\n            if (moment(e.created).valueOf() > timeOffset) {\n                if (!event) {\n                    event = e;\n                }\n\n                break;\n            }\n\n            event = e;\n        }\n\n        setSelectedEvent(event);\n    }, [filteredEvents, timeOffset]);\n\n    function handleFilterByChange(filterBy: FilterBy) {\n        setFilteredBy(filterBy);\n    }\n\n    function handleOptionChange(optionName: string) {\n        if (filteredBy === \"rules\") {\n            setSelectedRule(\n                rules.find(rule => rule === optionName) || undefined,\n            );\n        } else {\n            setSelectedTag(tags.find(tags => tags === optionName) || undefined);\n        }\n    }\n\n    function handleSelectTime(time: number) {\n        setTimeOffset(time);\n    }\n\n    function handlePrevOrNext(event: SourceEvent) {\n        setTimeOffset(moment(event.created).valueOf());\n    }\n\n    return (\n        <View style={styles.page}>\n            <Toolbar\n                filteredBy={filteredBy}\n                onFilterByChange={handleFilterByChange}\n                //rules={rules}\n                //selectedRule={selectedRule || \"\"}\n                //onRuleChange={handleRuleChange}\n                //tags={tags}\n                //selectedTag={selectedTag || \"\"}\n                //onTagChange={handleTagChange}\n                options={filteredBy === \"rules\" ? rules : tags}\n                selectedOption={\n                    (filteredBy === \"rules\" ? selectedRule : selectedTag) || \"\"\n                }\n                onOptionChange={handleOptionChange}\n                startTime={startTime}\n                endTime={endTime}\n            />\n            <Timeline\n                events={filteredEvents}\n                selectedEvent={selectedEvent}\n                startTime={startTime}\n                endTime={endTime}\n                onSelectTime={handleSelectTime}\n            />\n            {selectedEvent && (\n                <>\n                    <View style={styles.workspace}>\n                        <View style={styles.prevEvent}>\n                            <PrevEvent\n                                events={filteredEvents}\n                                selectedEvent={selectedEvent}\n                                onPrev={handlePrevOrNext}\n                            />\n                        </View>\n                        <View style={styles.selectedEvent}>\n                            <ValidateEvent\n                                source={source}\n                                event={selectedEvent}\n                            />\n                        </View>\n                        <View style={styles.nextEvent}>\n                            <NextEvent\n                                events={filteredEvents}\n                                selectedEvent={selectedEvent}\n                                onNext={handlePrevOrNext}\n                            />\n                        </View>\n                    </View>\n                    <View style={styles.footer}>\n                        <Stats\n                            numTotal={events.length}\n                            numTotalConfirmed={numTotalConfirmed}\n                            numTotalRejected={numTotalRejected}\n                            numFiltered={filteredEvents.length}\n                            numFilteredConfirmed={numFilteredConfirmed}\n                            numFilteredRejected={numFilteredRejected}\n                            filterName={\n                                (filteredBy === \"rules\"\n                                    ? selectedRule\n                                    : selectedTag) || \"\"\n                            }\n                        />\n                    </View>\n                </>\n            )}\n        </View>\n    );\n}\n\nconst withEvents = graphql<\n    Props,\n    GetEventsQuery,\n    GetEventsQueryVariables,\n    Props & Partial<Data>\n>(\n    gql`\n        query GetEvents($sourceId: ID!) {\n            events(sourceId: $sourceId) {\n                id\n                created\n                validation\n                ... on AlarmEvent {\n                    rule\n                    image {\n                        id\n                        uri\n                        tags\n                    }\n                }\n            }\n        }\n    `,\n    {\n        options: ({source}) => ({\n            variables: {sourceId: source.id},\n        }),\n        props: ({data, ownProps}) => {\n            const events = data!.events || undefined;\n\n            let startTime = 0;\n            let endTime = 0;\n\n            const rules: Set<string> = new Set();\n            const tags: Set<string> = new Set();\n\n            // Iterate events to find the time range, the set of rules the\n            // events were generated for, and the set of tags for event images.\n            if (events && events.length) {\n                events.forEach(event => {\n                    const created = moment(event.created).valueOf();\n\n                    startTime = Math.min(startTime || created, created);\n                    endTime = Math.max(endTime || created, created);\n\n                    if (event.__typename === \"AlarmEvent\") {\n                        rules.add(event.rule);\n\n                        event.image.tags.forEach(tag => tags.add(tag));\n                    } else {\n                        rules.add(\"<unknown>\");\n                    }\n                });\n            } else {\n                startTime = moment()\n                    .startOf(\"day\")\n                    .valueOf();\n                endTime = moment()\n                    .endOf(\"day\")\n                    .valueOf();\n            }\n\n            return {\n                ...ownProps,\n                events,\n                startTime,\n                endTime,\n                rules: Array.from(rules).sort(),\n                tags: Array.from(tags).sort(),\n            };\n        },\n    },\n);\n\n// Bootstrap component with events data for the source.\nexport default withEvents((props: Props & Partial<Data>) => {\n    const {events} = props;\n\n    if (!events) {\n        return (\n            <View style={styles.centerContainer}>\n                <CircularSpinner />\n            </View>\n        );\n    }\n\n    return <Validation {...props as (Props & Data)} />;\n});\n\nconst styles = {\n    page: {\n        flex: 1,\n    },\n\n    centerContainer: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: Spacing.medium,\n    },\n\n    workspace: {\n        flex: 1,\n        flexDirection: \"row\",\n    },\n\n    prevEvent: {\n        //flex: 1,\n    },\n\n    selectedEvent: {\n        flex: 1,\n        padding: Spacing.medium,\n    },\n\n    nextEvent: {\n        //flex: 1,\n    },\n\n    footer: {},\n};\n\n/*\nconst EVENTS_QUERY = gql`\n    query GetEvents($sourceId: ID!) {\n        events(sourceId: $sourceId) {\n            id\n            created\n            ... on AlarmEvent {\n                rule\n                image {\n                    id\n                    uri\n                    tags\n                }\n            }\n        }\n    }\n`;\nclass EventsQuery extends Query<GetEventsQuery, GetEventsQueryVariables> {}\n\nexport default function Validation({source}: Props) {\n    return (\n        <EventsQuery query={EVENTS_QUERY} variables={{sourceId: source.id}}>\n            {result => {\n                console.log(result);\n                return (\n                    <View style={styles.centerContainer}>\n                        <CircularSpinner />\n                    </View>\n                );\n            }}\n        </EventsQuery>\n    );\n}\n\nconst styles = {\n    centerContainer: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: Spacing.medium,\n    },\n};\n*/\n","/**\n *  The root component of the webapp viewer page.\n */\nimport React from \"react\";\nimport {RouteComponentProps} from \"react-router\";\n\nimport {View} from \"@khanacademy/wonder-blocks-core\";\nimport Spacing from \"@khanacademy/wonder-blocks-spacing\";\nimport {LabelLarge} from \"@khanacademy/wonder-blocks-typography\";\n\nimport {Source} from \"../graphql/schema\";\n\ntype Props = {\n    // The source to view events for.\n    source: Source;\n};\n\nexport default function Viewer({source}: Props) {\n    return (\n        <View style={styles.container}>\n            <LabelLarge>Not Implemented</LabelLarge>\n        </View>\n    );\n}\n\nconst styles = {\n    container: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: Spacing.large,\n    },\n};\n","/**\n * The application root component for webapp.\n */\nimport React, {useState, useEffect} from \"react\";\n\nimport {Redirect, matchPath} from \"react-router\";\nimport {Route, Switch, RouteComponentProps} from \"react-router-dom\";\n\nimport gql from \"graphql-tag\";\nimport {graphql} from \"react-apollo\";\n\nimport Color from \"@khanacademy/wonder-blocks-color\";\nimport {View} from \"@khanacademy/wonder-blocks-core\";\nimport {ModalLauncher, OneColumnModal} from \"@khanacademy/wonder-blocks-modal\";\nimport {CircularSpinner} from \"@khanacademy/wonder-blocks-progress-spinner\";\nimport Spacing from \"@khanacademy/wonder-blocks-spacing\";\nimport {Body} from \"@khanacademy/wonder-blocks-typography\";\n\nimport Configuration from \"./configuration\";\nimport Header from \"./header\";\nimport Validation from \"./validation\";\nimport Viewer from \"./viewer\";\n\nimport {\n    Source,\n    GetSourcesQuery,\n    GetSourcesQueryVariables,\n} from \"../graphql/schema\";\n\ntype AppPage = {\n    // The title of the webapp page.\n    title: string;\n\n    // The react-router path name (eg. \"validation\").\n    name: string;\n\n    // The root component of the page.\n    component: React.ComponentType<RouteComponentProps & {source: Source}>;\n};\n\nconst pages: AppPage[] = [\n    {\n        title: \"Validation\",\n        name: \"validation\",\n        component: Validation,\n    },\n    {\n        title: \"Viewer\",\n        name: \"viewer\",\n        component: Viewer,\n    },\n    {\n        title: \"Configuration\",\n        name: \"configuration\",\n        component: Configuration,\n    },\n];\n\ntype Data = {\n    // The queried, available video sources. It is guaranteed that at least one\n    // video source will be available.\n    sources: Source[];\n};\n\ntype Props = RouteComponentProps & Data;\n\nfunction App({history, location, sources}: Props) {\n    // The selected webapp page and video source.\n    const [selectedPage, setSelectedPage] = useState(pages[0]);\n    const [selectedSource, setSelectedSource] = useState(sources[0]);\n\n    // Parse the currently navigated to location to extract the page and source.\n    const {page, source} = (\n        (matchPath(\n            location.pathname,\n            `${\n                process.env.NODE_ENV === \"development\" ? \"\" : \"/webapp-public\"\n            }/:page/:source`,\n        ) as any) || {\n            params: {page: null, source: null},\n        }\n    ).params;\n\n    // Update state if there was a change in navigation to either the page or\n    // the source.\n    useEffect(() => {\n        const currentPage = pages.find(({name}) => name === page);\n        // Update the currently selected page on navigation.\n        if (currentPage) {\n            setSelectedPage(currentPage);\n        }\n    }, [page]);\n\n    useEffect(() => {\n        const currentSource = sources.find(({id}) => id === source);\n        // Update the currently selected source on navigation.\n        if (currentSource) {\n            setSelectedSource(currentSource);\n        }\n    }, [source]);\n\n    // Redirect if navigated to an invalid route.\n    if (!page || !source) {\n        return <Redirect to={`/${selectedPage.name}/${selectedSource.id}`} />;\n    }\n\n    function handlePageChange(pageTitle: string) {\n        const selectPage = pages.find(({title}) => title === pageTitle);\n        // Navigate to the user selected page with the current video source.\n        if (selectPage) {\n            history.push(`/${selectPage.name}/${selectedSource.id}`);\n        }\n    }\n\n    function handleSourceChange(sourceName: string) {\n        const selectSource = sources.find(({name}) => name === sourceName);\n        // Navigate to the current page with the user selected video source.\n        if (selectSource) {\n            history.push(`/${selectedPage.name}/${selectSource.id}`);\n        }\n    }\n\n    return (\n        <View style={styles.app}>\n            <Header\n                pages={pages.map(({title}) => title)}\n                selectedPage={selectedPage.title}\n                onPageChange={handlePageChange}\n                sources={sources.map(({name}) => name)}\n                selectedSource={selectedSource.name}\n                onSourceChange={handleSourceChange}\n            />\n            <Switch>\n                {pages.map(({name, component: Component}) => (\n                    <Route\n                        key={name}\n                        path={`/${name}/:source`}\n                        render={props => (\n                            <Component {...props} source={selectedSource} />\n                        )}\n                    />\n                ))}\n                {/* Redirect for an unknown page. */}\n                <Redirect to={`/${selectedPage.name}/${selectedSource.id}`} />\n            </Switch>\n        </View>\n    );\n}\n\n// As we expect to be wrapped by `withRouter`, this unions the provided\n// react-router props with the video sources query result.\ntype MaybeProps = RouteComponentProps & Partial<Data>;\n\nconst withSources = graphql<\n    RouteComponentProps,\n    GetSourcesQuery,\n    GetSourcesQueryVariables,\n    MaybeProps\n>(\n    gql`\n        query GetSources {\n            sources {\n                id\n                name\n                uri\n            }\n        }\n    `,\n    {\n        options: () => ({\n            variables: {},\n        }),\n        props: ({data, ownProps}) => {\n            const sources = data!.sources || undefined;\n\n            return {\n                ...ownProps,\n                sources,\n            };\n        },\n    },\n);\n\n// Bootstrap the app with available video sources.\nconst AppWithSources = withSources((props: MaybeProps) => {\n    const {sources} = props;\n\n    if (!sources) {\n        return (\n            <View style={styles.centerContainer}>\n                <CircularSpinner />\n            </View>\n        );\n    } else if (!sources.length) {\n        throw new Error(\"No sources were loaded!\");\n    }\n\n    return <App {...props} sources={sources} />;\n});\n\ntype ErrorState = {\n    // Capture any error thrown by the app in a React lifecycle method.\n    error: string | null;\n};\n\nfunction withErrorCatcher(WrappedComponent: React.ComponentType<any>) {\n    return class extends React.Component<any, ErrorState> {\n        state = {\n            error: null,\n        };\n\n        componentDidCatch(error: any) {\n            this.setState({error: error.toString()});\n        }\n\n        render() {\n            const {error} = this.state;\n\n            if (error) {\n                return (\n                    <ModalLauncher\n                        opened={true}\n                        modal={\n                            <OneColumnModal\n                                content={\n                                    <View style={styles.centerContainer}>\n                                        <Body style={{color: Color.red}}>\n                                            {error}\n                                        </Body>\n                                    </View>\n                                }\n                            />\n                        }\n                        onClose={() => {}}\n                    />\n                );\n            }\n\n            return <WrappedComponent {...this.props} />;\n        }\n    };\n}\n\nexport default withErrorCatcher(AppWithSources);\n\nconst styles = {\n    app: {\n        flex: 1,\n    },\n\n    centerContainer: {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        margin: Spacing.medium,\n    },\n};\n","export default class PRNG {\n    _seed = 0;\n\n    /**\n     * A seedable pseudo-random number generator.\n     *\n     * https://gist.github.com/blixt/f17b47c62508be59987b\n     */\n    constructor(seed = 0) {\n        this._seed = seed % 2147483647;\n\n        if (this._seed <= 0) {\n            this._seed += 2147483646;\n        }\n    }\n\n    /**\n     * Returns a pseudo-random whole value between 1 and 2^32 - 2.\n     */\n    int() {\n        return (this._seed = (this._seed * 16807) % 2147483647);\n    }\n\n    /**\n     * Returns a pseudo-random floating point number in range [0, 1].\n     */\n    float() {\n        return (this.int() - 1) / 2147483646;\n    }\n\n    /**\n     * Returns a pseudo-random while value in the specified range, inclusive.\n     */\n    between(min: number, max: number) {\n        return Math.min(\n            max,\n            Math.floor(this.float() * Math.floor(max + 1 - min) + min),\n        );\n    }\n\n    /**\n     * Returns a copy of the array with the elements pseudo-randomly shuffled.\n     *\n     * https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle\n     */\n    shuffle(array: any[]) {\n        array = [...array];\n\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = this.between(0, i);\n\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n\n        return array;\n    }\n}\n","/**\n *\n */\nimport React, {useEffect, useState} from \"react\";\nimport moment from \"moment\";\n\nimport {ApolloProvider} from \"react-apollo\";\nimport {ApolloClient} from \"apollo-client\";\nimport {InMemoryCache, NormalizedCacheObject} from \"apollo-cache-inmemory\";\nimport {SchemaLink} from \"apollo-link-schema\";\nimport {makeExecutableSchema} from \"graphql-tools\";\n\nimport PRNG from \"../utils/prng\";\n\n// HACK: As this is a symlink, this imports only the path to the schema.\n// A symlink is required as `create-react-app` does not allow to import files\n// outside of `src`. This links to `/webapp/services/api/schema.graphql`.\nimport schemaPath from \"./schema.graphql\";\n\nimport {\n    Source,\n    AlarmEvent,\n    QueryEventsArgs,\n    Validation,\n    MutationValidateEventArgs,\n} from \"./schema\";\n\nfunction resolveSources(): Source[] {\n    return [\n        {\n            id: \"1\",\n            name: \"Camera 1\",\n            uri: \"rtsp://camera_1\",\n        },\n    ];\n}\n\nfunction resolveEvents(obj: any, args: QueryEventsArgs): AlarmEvent[] {\n    if (args.sourceId !== \"1\") {\n        return [];\n    }\n\n    const r = new PRNG();\n\n    // Randomly order the 50 images of cats and dogs, with random tags for each\n    // image.\n    const images = r.shuffle(\n        Array(50)\n            .fill(undefined)\n            .map((_, i) => {\n                const id = String(i + 1);\n\n                return {\n                    id,\n                    uri: `${\n                        process.env.NODE_ENV === \"development\"\n                            ? \"/\"\n                            : \"https://pacefactory.github.io/webapp-public/\"\n                    }images/${id.padStart(3, \"0\")}.jpg`,\n                    tags: r\n                        .shuffle([\n                            ...r.shuffle([\"cat\", \"dog\"]).slice(0, 1),\n                            ...r.shuffle([\"small\", \"large\"]).slice(0, 1),\n                        ])\n                        .slice(0, r.between(0, 2)),\n                };\n            }),\n    );\n\n    let offset = 0;\n    // A series of 50 random intervals, totaling a full day in duration.\n    const intervals = r.shuffle(\n        Array(50)\n            .fill(undefined)\n            .map((_, i) => {\n                const interval =\n                    r.float() *\n                    (24 * 60 * 60 - offset) *\n                    Math.pow((i + 1) / 50, 3);\n\n                offset += interval;\n\n                return interval;\n            }),\n    );\n\n    offset = 0;\n    // We'll generate a time series of 50 random events, triggered by rules,\n    // for a single day.\n    const events = intervals.map((interval, i) => {\n        offset += interval;\n\n        return {\n            id: String(i + 1),\n            created: moment()\n                .startOf(\"day\")\n                .add(Math.floor(offset), \"seconds\")\n                .toISOString(true),\n            validation: Validation.None,\n            rule: r\n                .shuffle([\"idle_cat\", \"moving_cat\", \"idle_dog\", \"moving_dog\"])\n                .slice(0, 1)[0],\n            image: images[i],\n        };\n    });\n\n    (resolveEvents as any).events = events;\n\n    return events;\n}\n\nfunction mutationValidateEvent(\n    obj: any,\n    {input}: MutationValidateEventArgs,\n): AlarmEvent {\n    const event = (resolveEvents as any).events.find(\n        (event: AlarmEvent) => event.id === input.eventId,\n    ) as AlarmEvent;\n\n    return {\n        ...event,\n        validation: input.validation,\n    };\n}\n\nconst resolvers = {\n    Query: {\n        sources: resolveSources,\n        events: resolveEvents,\n    },\n    Mutation: {\n        validateEvent: mutationValidateEvent,\n    },\n    Event: {\n        __resolveType: () => \"AlarmEvent\",\n    },\n};\n\nexport default function withMockProvider(\n    WrappedComponent: React.ComponentType<any>,\n): React.ComponentType<any> {\n    return function() {\n        const [client, setClient] = useState<ApolloClient<\n            NormalizedCacheObject\n        > | null>(null);\n\n        useEffect(() => {\n            fetch(schemaPath)\n                .then(resp => resp.text())\n                .then(typeDefs => {\n                    const executableSchema = makeExecutableSchema({\n                        typeDefs,\n                        resolvers,\n                    });\n\n                    const link = new SchemaLink({schema: executableSchema});\n                    const cache = new InMemoryCache();\n\n                    const client = new ApolloClient({\n                        link,\n                        cache,\n                    });\n\n                    setClient(client);\n                });\n        }, []);\n\n        return client ? (\n            <ApolloProvider client={client}>\n                <WrappedComponent />\n            </ApolloProvider>\n        ) : null;\n    };\n}\n","/**\n *  The browser entry point to webapp.\n */\nimport React, {useState} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {withRouter, Redirect} from \"react-router\";\nimport {\n    BrowserRouter,\n    Route,\n    RouteComponentProps,\n    Switch,\n} from \"react-router-dom\";\n\n/*\nimport ApolloClient from \"apollo-client\";\nimport {InMemoryCache} from \"apollo-cache-inmemory\";\n//import {split} from \"apollo-link\";\nimport {HttpLink} from \"apollo-link-http\";\n//import {WebSocketLink} from \"apollo-link-ws\";\n//import {getMainDefinition} from \"apollo-utilities\";\nimport {ApolloProvider} from \"react-apollo\";\n*/\n\nimport App from \"./components/app\";\nimport withMockProvider from \"./graphql/mock-provider\";\n\n/*\nimport {View} from \"@khanacademy/wonder-blocks-core\";\n\nimport Header from \"./components/header\";\nimport Validation from \"./components/validation\";\nimport Viewer from \"./components/viewer\";\n\nconst pages = {\n    Validation: {\n        name: \"validation\",\n        path: \"/validation/:source\",\n        component: Validation,\n    },\n\n    Viewer: {\n        name: \"viewer\",\n        path: \"/viewer/:source\",\n        component: Viewer,\n    },\n};\n\ntype Pages = keyof typeof pages;\n\nfunction App({history}: RouteComponentProps) {\n    const sources = [\"Camera 1\"];\n\n    // The currently selected webapp page.\n    const [selectedPage, setSelectedPage] = useState<Pages>(\"Validation\");\n\n    // The currently selected source.\n    const [selectedSource, setSelectedSource] = useState(sources[0]);\n\n    function handlePageChange(page: string) {\n        const p = page as Pages;\n\n        setSelectedPage(p);\n\n        history.push(`/${pages[p].name}/${selectedSource}`);\n    }\n\n    function handleSourceChange(source: string) {\n        setSelectedSource(source);\n\n        history.push(`/${pages[selectedPage].name}/${source}`);\n    }\n\n    return (\n        <View>\n            <Header\n                pages={Object.keys(pages)}\n                selectedPage={selectedPage}\n                onPageChange={handlePageChange}\n                sources={sources}\n                selectedSource={selectedSource}\n                onSourceChange={handleSourceChange}\n            />\n            <Switch>\n                {Object.values(pages).map(({name, path, component}) => (\n                    <Route key={name} path={path} component={component} />\n                ))}\n                <Redirect to={`/${pages.Validation.name}/${selectedSource}`} />\n            </Switch>\n        </View>\n    );\n}\n*/\n\nconst AppWithRouter = withRouter(App);\n\n/*\nconst wsLink = new WebSocketLink({\n    uri: \"ws://localhost:8080\",\n    options: {\n        reconnect: true,\n    },\n});\n\nconst httpLink = new HttpLink({\n    uri: \"http://localhost:8080/query\",\n});\n\nconst link = split(\n    ({query}) => {\n        const definition = getMainDefinition(query);\n\n        return (\n            definition.kind === \"OperationDefinition\" &&\n            definition.operation === \"subscription\"\n        );\n    },\n    wsLink,\n    httpLink,\n);\n*/\n\n/*\nconst client = new ApolloClient({\n    link: new HttpLink({\n        uri: \"http://localhost:8080/query\",\n    }),\n    cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n    <BrowserRouter>\n        <ApolloProvider client={client}>\n            <AppWithRouter />\n        </ApolloProvider>\n    </BrowserRouter>,\n    document.getElementById(\"app\"),\n);\n*/\n\nconst AppWithRouterAndMockProvider = withMockProvider(AppWithRouter);\n\nReactDOM.render(\n    <BrowserRouter\n        basename={\n            process.env.NODE_ENV === \"development\"\n                ? undefined\n                : \"/webapp-public\"\n        }\n    >\n        <AppWithRouterAndMockProvider />\n    </BrowserRouter>,\n    document.getElementById(\"app\"),\n);\n"],"sourceRoot":""}